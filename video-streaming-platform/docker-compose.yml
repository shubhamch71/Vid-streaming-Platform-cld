#docker compose file for the whole application setup
services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - video-upload-service
      - streaming-service

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/users
      - RABBITMQ_URI=amqp://rabbitmq
    depends_on:
      - mongodb
      - rabbitmq

  video-upload-service:
    build: ./video-upload-service
    ports:
      - "3002:3002"
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  transcoding-service:
    build: ./transcoding-service
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  streaming-service:
    build: ./streaming-service
    ports:
      - "3003:3003"
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  fluentd:
    build:
      context: version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - video-upload-service
      - streaming-service

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/users
      - RABBITMQ_URI=amqp://rabbitmq
    depends_on:
      - mongodb
      - rabbitmq

  video-upload-service:
    build: ./video-upload-service
    ports:
      - "3002:3002"
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  transcoding-service:
    build: ./transcoding-service
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  streaming-service:
    build: ./streaming-service
    ports:
      - "3003:3003"
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    volumes:
      - video-uploads:/app/uploads
    depends_on:
      - rabbitmq

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  fluentd:
    build:
      context: ./logging
      dockerfile: Dockerfile.fluentd
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  mongodb-data:
  video-uploads:
  elasticsearch-data:
  grafana-data:./logging
      dockerfile: Dockerfile.fluentd
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  mongodb-data:
  video-uploads:
  elasticsearch-data:
  grafana-data:
